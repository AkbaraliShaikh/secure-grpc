// Code generated by protoc-gen-go. DO NOT EDIT.
// source: max.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	max.proto

It has these top-level messages:
	Request
	Response
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	Num int32 `protobuf:"varint,1,opt,name=num" json:"num,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto1.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Request) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

type Response struct {
	Result int32 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto1.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto1.RegisterType((*Request)(nil), "proto.Request")
	proto1.RegisterType((*Response)(nil), "proto.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Max service

type MaxClient interface {
	Num(ctx context.Context, opts ...grpc.CallOption) (Max_NumClient, error)
}

type maxClient struct {
	cc *grpc.ClientConn
}

func NewMaxClient(cc *grpc.ClientConn) MaxClient {
	return &maxClient{cc}
}

func (c *maxClient) Num(ctx context.Context, opts ...grpc.CallOption) (Max_NumClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Max_serviceDesc.Streams[0], c.cc, "/proto.Max/Num", opts...)
	if err != nil {
		return nil, err
	}
	x := &maxNumClient{stream}
	return x, nil
}

type Max_NumClient interface {
	Send(*Request) error
	Recv() (*Response, error)
	grpc.ClientStream
}

type maxNumClient struct {
	grpc.ClientStream
}

func (x *maxNumClient) Send(m *Request) error {
	return x.ClientStream.SendMsg(m)
}

func (x *maxNumClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Max service

type MaxServer interface {
	Num(Max_NumServer) error
}

func RegisterMaxServer(s *grpc.Server, srv MaxServer) {
	s.RegisterService(&_Max_serviceDesc, srv)
}

func _Max_Num_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MaxServer).Num(&maxNumServer{stream})
}

type Max_NumServer interface {
	Send(*Response) error
	Recv() (*Request, error)
	grpc.ServerStream
}

type maxNumServer struct {
	grpc.ServerStream
}

func (x *maxNumServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

func (x *maxNumServer) Recv() (*Request, error) {
	m := new(Request)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Max_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Max",
	HandlerType: (*MaxServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Num",
			Handler:       _Max_Num_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "max.proto",
}

func init() { proto1.RegisterFile("max.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 129 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcc, 0x4d, 0xac, 0xd0,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0xd2, 0x5c, 0xec, 0x41, 0xa9, 0x85,
	0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x02, 0x5c, 0xcc, 0x79, 0xa5, 0xb9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a,
	0xac, 0x41, 0x20, 0xa6, 0x92, 0x12, 0x17, 0x47, 0x50, 0x6a, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0xaa,
	0x90, 0x18, 0x17, 0x5b, 0x51, 0x6a, 0x71, 0x69, 0x4e, 0x09, 0x54, 0x01, 0x94, 0x67, 0x64, 0xcc,
	0xc5, 0xec, 0x9b, 0x58, 0x21, 0xa4, 0xc3, 0xc5, 0xec, 0x57, 0x9a, 0x2b, 0xc4, 0x07, 0x31, 0x5d,
	0x0f, 0x6a, 0xa6, 0x14, 0x3f, 0x9c, 0x0f, 0x31, 0x46, 0x89, 0x41, 0x83, 0xd1, 0x80, 0x31, 0x89,
	0x0d, 0x2c, 0x6a, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x2d, 0x77, 0xfc, 0x42, 0x90, 0x00, 0x00,
	0x00,
}
